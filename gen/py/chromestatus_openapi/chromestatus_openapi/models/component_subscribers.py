# coding: utf-8

from __future__ import absolute_import
from datetime import date, datetime  # noqa: F401

from typing import List, Dict  # noqa: F401

from chromestatus_openapi.models.base_model_ import Model
from chromestatus_openapi.models.component_subscribers_components_inner import ComponentSubscribersComponentsInner
from chromestatus_openapi.models.component_subscribers_possible_subscribers_inner import ComponentSubscribersPossibleSubscribersInner
from chromestatus_openapi import util

from chromestatus_openapi.models.component_subscribers_components_inner import ComponentSubscribersComponentsInner  # noqa: E501
from chromestatus_openapi.models.component_subscribers_possible_subscribers_inner import ComponentSubscribersPossibleSubscribersInner  # noqa: E501

class ComponentSubscribers(Model):
    """NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).

    Do not edit the class manually.
    """

    def __init__(self, possible_subscribers=None, components=None):  # noqa: E501
        """ComponentSubscribers - a model defined in OpenAPI

        :param possible_subscribers: The possible_subscribers of this ComponentSubscribers.  # noqa: E501
        :type possible_subscribers: List[ComponentSubscribersPossibleSubscribersInner]
        :param components: The components of this ComponentSubscribers.  # noqa: E501
        :type components: List[ComponentSubscribersComponentsInner]
        """
        self.openapi_types = {
            'possible_subscribers': List[ComponentSubscribersPossibleSubscribersInner],
            'components': List[ComponentSubscribersComponentsInner]
        }

        self.attribute_map = {
            'possible_subscribers': 'possible_subscribers',
            'components': 'components'
        }

        self._possible_subscribers = possible_subscribers
        self._components = components

    @classmethod
    def from_dict(cls, dikt) -> 'ComponentSubscribers':
        """Returns the dict as a model

        :param dikt: A dict.
        :type: dict
        :return: The ComponentSubscribers of this ComponentSubscribers.  # noqa: E501
        :rtype: ComponentSubscribers
        """
        return util.deserialize_model(dikt, cls)

    @property
    def possible_subscribers(self):
        """Gets the possible_subscribers of this ComponentSubscribers.


        :return: The possible_subscribers of this ComponentSubscribers.
        :rtype: List[ComponentSubscribersPossibleSubscribersInner]
        """
        return self._possible_subscribers

    @possible_subscribers.setter
    def possible_subscribers(self, possible_subscribers):
        """Sets the possible_subscribers of this ComponentSubscribers.


        :param possible_subscribers: The possible_subscribers of this ComponentSubscribers.
        :type possible_subscribers: List[ComponentSubscribersPossibleSubscribersInner]
        """

        self._possible_subscribers = possible_subscribers

    @property
    def components(self):
        """Gets the components of this ComponentSubscribers.


        :return: The components of this ComponentSubscribers.
        :rtype: List[ComponentSubscribersComponentsInner]
        """
        return self._components

    @components.setter
    def components(self, components):
        """Sets the components of this ComponentSubscribers.


        :param components: The components of this ComponentSubscribers.
        :type components: List[ComponentSubscribersComponentsInner]
        """

        self._components = components
